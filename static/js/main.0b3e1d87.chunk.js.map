{"version":3,"sources":["Tool.js","Users.js","App.js","index.js"],"names":["Tool","key","avatar","email","first_name","last_name","ListGroup","ListGroupItem","name","src","variant","colorScheme","Users","useState","data","setData","error","setError","loading","setloading","fetchData","a","axios","get","then","response","console","log","catch","err","finally","useEffect","Button","value","onClick","Spinner","color","map","d","id","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iRA8CeA,MAhCf,YAA8D,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAC9C,OACE,qCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,KAAMN,EAAQO,IAAKP,MAE7B,eAAC,IAAD,CAAOQ,QAAQ,UAAUC,YAAY,OAArC,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,cAAC,IAAD,yBACA,cAAC,IAAD,6BAGJ,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAKR,IACL,cAAC,IAAD,UAAKC,IACL,cAAC,IAAD,UAAKC,gBAjBKJ,IADNA,GAyBhB,cAAC,IAAD,QCkBSW,MAvDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAS,uCAAG,sBAAAC,EAAA,sEACOC,IACpBC,IAAI,uCACJC,MAAK,SAACC,GACLV,EAAQU,EAASX,KAAKA,MACtBY,QAAQC,IAAIF,EAASX,SAEtBc,OAAM,SAACC,GACNZ,EAASY,MAEVC,SAAQ,WACPX,GAAW,MAXC,yDAAH,qDAyBf,OAXAY,qBAAU,WACRX,IACAM,QAAQC,IAAIX,GACZU,QAAQC,IAAIT,KACX,IAQD,qCACE,cAACc,EAAA,EAAD,CAAQxB,KAAK,KAAKyB,MAAM,KAAKC,QAPjC,WACEd,IACAM,QAAQC,IAAI,iBACZR,GAAW,IAIT,qBAGCD,EACC,8BACE,cAACiB,EAAA,EAAD,CAASC,MAAM,cAGjB,gCACE,wDACCtB,EAAKuB,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAEEnC,MAAOmC,EAAEnC,MACTD,OAAQoC,EAAEpC,OACVE,WAAYkC,EAAElC,WACdC,UAAWiC,EAAEjC,WAJRiC,EAAEC,cC7CN,SAASC,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,MCAN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,I","file":"static/js/main.0b3e1d87.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { Avatar, Wrap, WrapItem } from \"@chakra-ui/react\";\r\nimport { Divider } from \"@chakra-ui/react\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption\r\n} from \"@chakra-ui/react\";\r\nfunction Tool({ key, avatar, email, first_name, last_name }) {\r\n  return (\r\n    <>\r\n      <ListGroup key={key}>\r\n        <ListGroupItem key={key}>\r\n          <Wrap>\r\n            <WrapItem>\r\n              <Avatar name={avatar} src={avatar} />\r\n            </WrapItem>\r\n            <Table variant=\"striped\" colorScheme=\"teal\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>E-Mail</Th>\r\n                  <Th>First Name</Th>\r\n                  <Th>Last Name</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                <Tr>\r\n                  <Td>{email}</Td>\r\n                  <Td>{first_name}</Td>\r\n                  <Td>{last_name}</Td>\r\n                </Tr>\r\n              </Tbody>\r\n            </Table>\r\n          </Wrap>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\nexport default Tool;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Spinner } from \"reactstrap\";\r\nimport Tool from \"./Tool\";\r\n\r\nfunction Users() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setloading] = useState(true);\r\n  const fetchData = async () => {\r\n    const response = await axios\r\n      .get(\"https://reqres.in/api/users?delay=1\")\r\n      .then((response) => {\r\n        setData(response.data.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    console.log(error);\r\n    console.log(loading);\r\n  }, []);\r\n\r\n  function handleClick() {\r\n    fetchData();\r\n    console.log(\"tetiklendi...\");\r\n    setloading(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Button name=\"re\" value=\"re\" onClick={handleClick}>\r\n        reFetch\r\n      </Button>\r\n      {loading ? (\r\n        <div>\r\n          <Spinner color=\"primary\" />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>Kullanıcılar</h1>\r\n          {data.map((d) => (\r\n            <Tool\r\n              key={d.id}\r\n              email={d.email}\r\n              avatar={d.avatar}\r\n              first_name={d.first_name}\r\n              last_name={d.last_name}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Users;\r\n","import \"./styles.css\";\nimport Users from \"./Users\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Users />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}